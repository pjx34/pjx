<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd">

	<!-- spring的配置文件,主要配置业务逻辑-->  
	<context:component-scan base-package="com.grade">
		<!-- 除了控制器都要扫描 -->
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	
		<!-- 配置数据源 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="com.mysql.jdbc.Driver" />
		<property name="jdbcUrl" value="jdbc:mysql:///test?useUnicode=true&amp;characterEncoding=utf8" />
		<property name="user" value="root" />
		<property name="password" value="" />
		<property name="minPoolSize" value="5" />
		<property name="maxPoolSize" value="10" />
	</bean>
	
			<!-- 配置和mybatis的整合 -->
	<!-- 配置SqlSessionFactoryBean -->  
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
    	<property name="configLocation" value="classpath:mybatis-config.xml"/>
        <property name="dataSource" ref="dataSource" />  
        <!-- 自动扫描mapping.xml文件 -->  
        <property name="mapperLocations" value="classpath:com/grade/dao/*.xml"></property>  
    </bean> 
    
        <!-- 配置扫描器,将mybatis接口的实现加入到ioc容器中 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
        <property name="basePackage" value="com.grade.dao" />    
    </bean> 
    
       <!-- 配置DataSourceTransactionManager(事务管理) -->  
    <bean id="transactionManager"  class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
        <property name="dataSource" ref="dataSource" />  
    </bean>
        
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
    	<tx:attributes>
    		<!--所有方法  -->
    		<tx:method name="*" isolation="READ_COMMITTED" propagation="REQUIRED" read-only="false"/>
    		<!--查询 -->
    		<tx:method name="get*" read-only="true"/>
    		<!--增加 -->
    		<tx:method name="save*" read-only="false"/>
    		<!--删除 -->
    		<tx:method name="del*" read-only="false"/>
    		<!--更新 -->
    		<tx:method name="upd*" read-only="false"/>
    	</tx:attributes>
    </tx:advice>
    
    <!-- 开启基于注解的事务 -->
   <aop:config>
    	<aop:pointcut expression="execution(* com.grade.service.*.*(..))" id="txPoint"/>
    	<aop:advisor advice-ref="txAdvice" pointcut-ref="txPoint"/>
    </aop:config>  

</beans>
